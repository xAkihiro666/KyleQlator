<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RK5CYII=
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAABMLAAATCwAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAByAAAA3QAAAPkAAADwAAAAzQAA
        AJQAAABuAAAAhAAAAL8AAADmAAAA8AAAANoAAACGAAAAFgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJAAAAigAAAOIAAACPAAAAVwAA
        AGQAAACUAAAAwQAAANYAAADKAAAAnwAAAHEAAABjAAAAhwAAANwAAACfAAAADQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAF0AAADjAAAAWAAA
        AAIAAAAAAAAAAAAAAAEAAAANAAAAGAAAABIAAAADAAAAAAAAAAAAAAAAAAAARwAAAOIAAABVAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJAAAAtwAA
        AJsAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGAAAAtAAA
        AJcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        ABcAAADVAAAAYwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAMAAACrAAAAogAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAADQAAAMAAAACQAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAARAAAAOMAAABlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
        DH//hAh//8AA///AQf//4EH///BD///wR/8=
</value>
  </data>
</root>